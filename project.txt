DPBOLG项目计划
介绍：
		基于Python个人博客系统

功能：
	后端：
		超级管理员(后台)
		
			后台：
				文章发布、修改、删除；
				附件管理(WP媒体库)；
				链接块(友链、导航链接等)；
				固定页面(留言板等功能)；
				文章归档(各种分类、标签管理)
				评论管理；
				外观功能(主题有点太大，可能初步想只是修改颜色，自定义css)
				插件功能(未考虑过如何实现);
				小工具功能(首页显示)；
				用户管理(删除、修改);
				读者用户注册登录(留言、评论)；
				站点设置：
						基本设置：
							站点标题与副标题("标题 - 副标题"，文章具体页面副标题会以文章标题为准)；	
							站点维护(临时关闭站点；可以访问后台)；
							日期时间格式(用于前端展示 ps:感觉用处不大)；
						文章发布：
							通过电子邮件发布(定时扫描收件箱？这个不清楚怎么实现的);
							文章隐藏(根据时间、用户等级、文章分类、标签)；
							同步微博发布；
							文章内外链转内联(具体根据WP No External Links Settings设计)；
						其他设置：
							主页链接(是显示列表页，还是固定一个页面)；
							首页文章排序(修改时间、创建时间)；
							列表页显示多少文章；
							feed设计；
							XML 站点地图；
							robots.txt 规则；
						评论设置(评论也可以基于第三方)：
							评论开关；
							评论条件(是否需要登录、是否再固定时间后关闭评论)；
							是否嵌套评论；
							是否分页显示评论；
							评论通知；
							评论审核(关键字过滤)；
							评论黑名单(IP)；
							头像问题(按照首字母自动生成)
						链接设置：
							伪静态格式；
							自动生成文章链接(利用拼音)；
							
			前端：
				全站ajax(不考虑SEO)；
				首页文章展示(分页)；
				首页右侧小工具栏；
				文章详情页(评论)；
				固定页面模板(个人简介、留言板等)；
				文章类别模板；
				首页搜索功能；
				
						
PS：前端"文章类别模板"，可以理解为根据不同类型(动态、文章、图片)显示不同版式。
还有就是"Shortcode"短代码的实现，是在前端实现还是后端实现？
						
表设计：
		文章(posts);
			id；
			author；
			create_date；
			content；
			title；
			excerpt(摘录列表页显示)；
			status(文章发布状态)；
			comment_status(评论状态是否允许评论)；
			password(文章密码)；
			modified(修改时间)；
			type(文章类型)；
		文章分类等相关信息(terms);
		评论(comments);
		用户(users);
		设置(options);
		
		
		